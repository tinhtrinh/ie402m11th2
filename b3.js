const b3base = {
    type: "polygon",
    rings: [
        [106.78231143363178, 10.88366844310803, 0],
        [106.7824482262826, 10.88350777132639, 0],
        [106.78245761401354, 10.88351567321931, 0],
        [106.78253808028263, 10.883422167471679, 0],
        [106.78252735144727, 10.88341031462848, 0],
        [106.78265207416155, 10.883262812538334, 0],
        [106.7825216787845, 10.88315193586618, 0],
        [106.78238823889163, 10.883306022926027, 0],
        [106.78238555668277, 10.883320509739377, 0],
        [106.78237984916672, 10.883332556938806, 0],
        [106.78236509701809, 10.883322679566541, 0],
        [106.78232084057224, 10.883374700390105, 0],
        [106.78233022830318, 10.883388528708755, 0],
        [106.78232352278107, 10.883395772113502, 0],
        [106.78231279394572, 10.883400381552805, 0],
        [106.78218270681151, 10.883558419430885, 0]
    ]
}

const b3roof = {
    type: "polygon",
    rings: [
        [106.78231143363178, 10.88366844310803, 35],
        [106.7824482262826, 10.88350777132639, 35],
        [106.78245761401354, 10.88351567321931, 35],
        [106.78253808028263, 10.883422167471679, 35],
        [106.78252735144727, 10.88341031462848, 35],
        [106.78265207416155, 10.883262812538334, 35],
        [106.7825216787845, 10.88315193586618, 35],
        [106.78238823889163, 10.883306022926027, 35],
        [106.78238555668277, 10.883320509739377, 35],
        [106.78237984916672, 10.883332556938806, 35],
        [106.78236509701809, 10.883322679566541, 35],
        [106.78232084057224, 10.883374700390105, 35],
        [106.78233022830318, 10.883388528708755, 35],
        [106.78232352278107, 10.883395772113502, 35],
        [106.78231279394572, 10.883400381552805, 35],
        [106.78218270681151, 10.883558419430885, 35]
    ]
}

const b3floor = []

for(let i = 0; i <= 15; i ++) {
    let r1, r2, r3, r4;

    if(i < 15) {
        r1 = b3base.rings[i];
        r2 = b3base.rings[i + 1];
        r3 = [b3base.rings[i + 1][0], b3base.rings[i + 1][1] + 0.000000000000010, 10];
        r4 = [b3base.rings[i][0], b3base.rings[i][1] + 0.000000000000010, 10];
    } else {
        r1 = b3base.rings[15];
        r2 = b3base.rings[0];
        r3 = [b3base.rings[0][0], b3base.rings[0][1] + 0.000000000000010, 10];
        r4 = [b3base.rings[15][0], b3base.rings[15][1] + 0.000000000000010, 10];
    }

    let f = {
        type: "polygon",
        rings: [r1, r2, r3, r4]
    }

    b3floor.push(f)
}

const b3wall = []

for(let i = 0; i <= 15; i ++) {
    let w1, w2, w3, w4;

    if(i < 15) {
        w1 = [b3base.rings[i][0], b3base.rings[i][1], 10];
        w2 = [b3base.rings[i + 1][0], b3base.rings[i + 1][1], 10];
        w3 = [b3base.rings[i + 1][0], b3base.rings[i + 1][1] + 0.000000000000010, 35];
        w4 = [b3base.rings[i][0], b3base.rings[i][1] + 0.000000000000010, 35];
    } else {
        w1 = [b3base.rings[15][0], b3base.rings[15][1], 10];
        w2 = [b3base.rings[0][0], b3base.rings[0][1], 10];
        w3 = [b3base.rings[0][0], b3base.rings[0][1] + 0.000000000000010, 35];
        w4 = [b3base.rings[15][0], b3base.rings[15][1] + 0.000000000000010, 35];
    }

    let w = {
        type: "polygon",
        rings: [w1, w2, w3, w4]
    }

    b3wall.push(w)
}

const b3line = [];

for(let i = 0; i <= 4; i++) {
    let l = [];

    if(i == 0) {
        for(let j = 0; j <= 16; j++) {
            if(j < 16) {
                l.push([b3base.rings[j][0], b3base.rings[j][1], 12.5])
            } else {
                l.push([b3base.rings[0][0], b3base.rings[0][1], 12.5])
            }
        }
    } else {
        for(let j = 0; j <= 16; j++) {
            if(j < 16) {
                l.push([b3base.rings[j][0], b3base.rings[j][1], 12.5 + i * 5])
            } else {
                l.push([b3base.rings[0][0], b3base.rings[0][1], 12.5 + i * 5])
            }
        }
    }

    let line = {
        type: "polyline", // autocasts as new Polyline()
        paths: l
    };

    b3line.push(line);
}

export { b3base, b3roof, b3floor, b3wall, b3line }