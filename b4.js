const b4base = {
    type: "polygon",
    rings: [
        [106.78324543120515, 10.882914108160099, 0],
        [106.78339853689327, 10.883043316966441, 0],
        [106.78339295491506, 10.883052713968349, 0],
        [106.78349024082107, 10.883132588472641, 0],
        [106.78349821507565, 10.883124757639827, 0],
        [106.78365770016984, 10.883257098687894, 0],
        [106.7837669474577, 10.883125540724386, 0],
        [106.78360267781316, 10.882990067284611, 0],
        [106.78359948811134, 10.882993199619168, 0],
        [106.7835883241549, 10.882984585699045, 0],
        [106.78359869068586, 10.882971273276542, 0],
        [106.78353649150006, 10.882921155915886, 0],
        [106.78352373269273, 10.882931336005447, 0],
        [106.7835165558636, 10.882925854418803, 0],
        [106.7835193189273, 10.882919449319656, 0],
        [106.78335637473933, 10.882781824378187, 0]
    ]
}

const b4roof = {
    type: "polygon",
    rings: [
        [106.78324543120515, 10.882914108160099, 35],
        [106.78339853689327, 10.883043316966441, 35],
        [106.78339295491506, 10.883052713968349, 35],
        [106.78349024082107, 10.883132588472641, 35],
        [106.78349821507565, 10.883124757639827, 35],
        [106.78365770016984, 10.883257098687894, 35],
        [106.7837669474577, 10.883125540724386, 35],
        [106.78360267781316, 10.882990067284611, 35],
        [106.78359948811134, 10.882993199619168, 35],
        [106.7835883241549, 10.882984585699045, 35],
        [106.78359869068586, 10.882971273276542, 35],
        [106.78353649150006, 10.882921155915886, 35],
        [106.78352373269273, 10.882931336005447, 35],
        [106.7835165558636, 10.882925854418803, 35],
        [106.7835193189273, 10.882919449319656, 35],
        [106.78335637473933, 10.882781824378187, 35]
    ]
}

const b4floor = []

for(let i = 0; i <= 15; i ++) {
    let r1, r2, r3, r4;

    if(i < 15) {
        r1 = b4base.rings[i];
        r2 = b4base.rings[i + 1];
        r3 = [b4base.rings[i + 1][0], b4base.rings[i + 1][1] + 0.000000000000010, 10];
        r4 = [b4base.rings[i][0], b4base.rings[i][1] + 0.000000000000010, 10];
    } else {
        r1 = b4base.rings[15];
        r2 = b4base.rings[0];
        r3 = [b4base.rings[0][0], b4base.rings[0][1] + 0.000000000000010, 10];
        r4 = [b4base.rings[15][0], b4base.rings[15][1] + 0.000000000000010, 10];
    }

    let f = {
        type: "polygon",
        rings: [r1, r2, r3, r4]
    }

    b4floor.push(f)
}

const b4wall = []

for(let i = 0; i <= 15; i ++) {
    let w1, w2, w3, w4;

    if(i < 15) {
        w1 = [b4base.rings[i][0], b4base.rings[i][1], 10];
        w2 = [b4base.rings[i + 1][0], b4base.rings[i + 1][1], 10];
        w3 = [b4base.rings[i + 1][0], b4base.rings[i + 1][1] + 0.000000000000010, 35];
        w4 = [b4base.rings[i][0], b4base.rings[i][1] + 0.000000000000010, 35];
    } else {
        w1 = [b4base.rings[15][0], b4base.rings[15][1], 10];
        w2 = [b4base.rings[0][0], b4base.rings[0][1], 10];
        w3 = [b4base.rings[0][0], b4base.rings[0][1] + 0.000000000000010, 35];
        w4 = [b4base.rings[15][0], b4base.rings[15][1] + 0.000000000000010, 35];
    }

    let w = {
        type: "polygon",
        rings: [w1, w2, w3, w4]
    }

    b4wall.push(w)
}

const b4line = [];

for(let i = 0; i <= 4; i++) {
    let l = [];

    if(i == 0) {
        for(let j = 0; j <= 16; j++) {
            if(j < 16) {
                l.push([b4base.rings[j][0], b4base.rings[j][1], 12.5])
            } else {
                l.push([b4base.rings[0][0], b4base.rings[0][1], 12.5])
            }
        }
    } else {
        for(let j = 0; j <= 16; j++) {
            if(j < 16) {
                l.push([b4base.rings[j][0], b4base.rings[j][1], 12.5 + i * 5])
            } else {
                l.push([b4base.rings[0][0], b4base.rings[0][1], 12.5 + i * 5])
            }
        }
    }

    let line = {
        type: "polyline", // autocasts as new Polyline()
        paths: l
    };

    b4line.push(line);
}

export { b4base, b4roof, b4floor, b4wall, b4line }