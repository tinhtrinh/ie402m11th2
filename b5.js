const b5base = {
    type: "polygon",
    rings: [
        [106.7829157400403, 10.884162980991245, 0],
        [106.78304917993007, 10.884006260416195, 0],
        [106.78305320324331, 10.883994407596226, 0],
        [106.78305789710879, 10.883987164206033, 0],
        [106.78306929649636, 10.883993090616201, 0],
        [106.7831182468127, 10.883933826507604, 0],
        [106.78310818852954, 10.883923290665104, 0],
        [106.78311628624155, 10.883917468364018, 0],
        [106.78312567397249, 10.883914834403296, 0],
        [106.78325844331619, 10.883754162753151, 0],
        [106.78312634452982, 10.883646828775122, 0],
        [106.78299961016214, 10.883798940106155, 0],
        [106.78298217580469, 10.883786428787491, 0],
        [106.78290439174506, 10.883877958951011, 0],
        [106.78292048499812, 10.883893104226786, 0],
        [106.78278503345116, 10.884054434292716, 0]
    ]
}

const b5roof = {
    type: "polygon",
    rings: [
        [106.7829157400403, 10.884162980991245, 35],
        [106.78304917993007, 10.884006260416195, 35],
        [106.78305320324331, 10.883994407596226, 35],
        [106.78305789710879, 10.883987164206033, 35],
        [106.78306929649636, 10.883993090616201, 35],
        [106.7831182468127, 10.883933826507604, 35],
        [106.78310818852954, 10.883923290665104, 35],
        [106.78311628624155, 10.883917468364018, 35],
        [106.78312567397249, 10.883914834403296, 35],
        [106.78325844331619, 10.883754162753151, 35],
        [106.78312634452982, 10.883646828775122, 35],
        [106.78299961016214, 10.883798940106155, 35],
        [106.78298217580469, 10.883786428787491, 35],
        [106.78290439174506, 10.883877958951011, 35],
        [106.78292048499812, 10.883893104226786, 35],
        [106.78278503345116, 10.884054434292716, 35]
    ]
}

const b5floor = []

for(let i = 0; i <= 15; i ++) {
    let r1, r2, r3, r4;

    if(i < 15) {
        r1 = b5base.rings[i];
        r2 = b5base.rings[i + 1];
        r3 = [b5base.rings[i + 1][0], b5base.rings[i + 1][1] + 0.000000000000010, 10];
        r4 = [b5base.rings[i][0], b5base.rings[i][1] + 0.000000000000010, 10];
    } else {
        r1 = b5base.rings[15];
        r2 = b5base.rings[0];
        r3 = [b5base.rings[0][0], b5base.rings[0][1] + 0.000000000000010, 10];
        r4 = [b5base.rings[15][0], b5base.rings[15][1] + 0.000000000000010, 10];
    }

    let f = {
        type: "polygon",
        rings: [r1, r2, r3, r4]
    }

    b5floor.push(f)
}

const b5wall = []

for(let i = 0; i <= 15; i ++) {
    let w1, w2, w3, w4;

    if(i < 15) {
        w1 = [b5base.rings[i][0], b5base.rings[i][1], 10];
        w2 = [b5base.rings[i + 1][0], b5base.rings[i + 1][1], 10];
        w3 = [b5base.rings[i + 1][0], b5base.rings[i + 1][1] + 0.000000000000010, 35];
        w4 = [b5base.rings[i][0], b5base.rings[i][1] + 0.000000000000010, 35];
    } else {
        w1 = [b5base.rings[15][0], b5base.rings[15][1], 10];
        w2 = [b5base.rings[0][0], b5base.rings[0][1], 10];
        w3 = [b5base.rings[0][0], b5base.rings[0][1] + 0.000000000000010, 35];
        w4 = [b5base.rings[15][0], b5base.rings[15][1] + 0.000000000000010, 35];
    }

    let w = {
        type: "polygon",
        rings: [w1, w2, w3, w4]
    }

    b5wall.push(w)
}

const b5line = [];

for(let i = 0; i <= 4; i++) {
    let l = [];

    if(i == 0) {
        for(let j = 0; j <= 16; j++) {
            if(j < 16) {
                l.push([b5base.rings[j][0], b5base.rings[j][1], 12.5])
            } else {
                l.push([b5base.rings[0][0], b5base.rings[0][1], 12.5])
            }
        }
    } else {
        for(let j = 0; j <= 16; j++) {
            if(j < 16) {
                l.push([b5base.rings[j][0], b5base.rings[j][1], 12.5 + i * 5])
            } else {
                l.push([b5base.rings[0][0], b5base.rings[0][1], 12.5 + i * 5])
            }
        }
    }

    let line = {
        type: "polyline", // autocasts as new Polyline()
        paths: l
    };

    b5line.push(line);
}

export { b5base, b5roof, b5floor, b5wall, b5line }