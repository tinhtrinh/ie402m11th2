const ba1base = {
    type: "polygon",
    rings: [
        [106.7819233811084, 10.8818386951301, 0],
        [106.78194148601807, 10.881820257275852, 0],
        [106.78194953264459, 10.881824208244714, 0],
        [106.78204877437166, 10.88170567915609, 0],
        [106.78204139829737, 10.881695801729906, 0],
        [106.7820673282311, 10.881665648720517, 0], 
        [106.78201770736756, 10.881621529541789, 0],
        [106.7820210601286, 10.88161692007498, 0],
        [106.78196205153414, 10.881563581953845, 0],
        [106.78195467546553, 10.881570166905878, 0],
        [106.78189365521443, 10.88152143824473, 0],
        [106.78187152699151, 10.881546461071721, 0],
        [106.78186683312603, 10.88154053461289, 0],
        [106.78176472825632, 10.881657195326943, 0],
        [106.78177009267401, 10.881667731249557, 0],
        [106.7817499761077, 10.881694071054449, 0],
        [106.78180093807566, 10.881742141192396, 0],
        [106.78179557365797, 10.881750043132135, 0],
        [106.78186732274446, 10.881809307673514, 0],
        [106.7818713460577, 10.881799430250767, 0]
    ]
}

const ba1roof = {
    type: "polygon",
    rings: [
        [106.7819233811084, 10.8818386951301, 45],
        [106.78194148601807, 10.881820257275852, 45],
        [106.78194953264459, 10.881824208244714, 45],
        [106.78204877437166, 10.88170567915609, 45],
        [106.78204139829737, 10.881695801729906, 45],
        [106.7820673282311, 10.881665648720517, 45], 
        [106.78201770736756, 10.881621529541789, 45],
        [106.7820210601286, 10.88161692007498, 45],
        [106.78196205153414, 10.881563581953845, 45],
        [106.78195467546553, 10.881570166905878, 45],
        [106.78189365521443, 10.88152143824473, 45],
        [106.78187152699151, 10.881546461071721, 45],
        [106.78186683312603, 10.88154053461289, 45],
        [106.78176472825632, 10.881657195326943, 45],
        [106.78177009267401, 10.881667731249557, 45],
        [106.7817499761077, 10.881694071054449, 45],
        [106.78180093807566, 10.881742141192396, 45],
        [106.78179557365797, 10.881750043132135, 45],
        [106.78186732274446, 10.881809307673514, 45],
        [106.7818713460577, 10.881799430250767, 45]
    ]
}

const ba1floor = []

for(let i = 0; i <= 19; i ++) {
    let r1, r2, r3, r4;

    if(i < 19) {
        r1 = ba1base.rings[i];
        r2 = ba1base.rings[i + 1];
        r3 = [ba1base.rings[i + 1][0], ba1base.rings[i + 1][1] + 0.000000000000010, 10];
        r4 = [ba1base.rings[i][0], ba1base.rings[i][1] + 0.000000000000010, 10];
    } else {
        r1 = ba1base.rings[19];
        r2 = ba1base.rings[0];
        r3 = [ba1base.rings[0][0], ba1base.rings[0][1] + 0.000000000000010, 10];
        r4 = [ba1base.rings[19][0], ba1base.rings[19][1] + 0.000000000000010, 10];
    }

    let f = {
        type: "polygon",
        rings: [r1, r2, r3, r4]
    }

    ba1floor.push(f)
}

const ba1wall = []

for(let i = 0; i <= 19; i ++) {
    let w1, w2, w3, w4;

    if(i < 19) {
        w1 = [ba1base.rings[i][0], ba1base.rings[i][1], 10];
        w2 = [ba1base.rings[i + 1][0], ba1base.rings[i + 1][1], 10];
        w3 = [ba1base.rings[i + 1][0], ba1base.rings[i + 1][1] + 0.000000000000010, 45];
        w4 = [ba1base.rings[i][0], ba1base.rings[i][1] + 0.000000000000010, 45];
    } else {
        w1 = [ba1base.rings[19][0], ba1base.rings[19][1], 10];
        w2 = [ba1base.rings[0][0], ba1base.rings[0][1], 10];
        w3 = [ba1base.rings[0][0], ba1base.rings[0][1] + 0.000000000000010, 45];
        w4 = [ba1base.rings[19][0], ba1base.rings[19][1] + 0.000000000000010, 45];
    }

    let w = {
        type: "polygon",
        rings: [w1, w2, w3, w4]
    }

    ba1wall.push(w)
}

const ba1line = [];

for(let i = 0; i <= 6; i++) {
    let l = [];

    if(i == 0) {
        for(let j = 0; j <= 20; j++) {
            if(j < 20) {
                l.push([ba1base.rings[j][0], ba1base.rings[j][1], 12.5])
            } else {
                l.push([ba1base.rings[0][0], ba1base.rings[0][1], 12.5])
            }
        }
    } else {
        for(let j = 0; j <= 20; j++) {
            if(j < 20) {
                l.push([ba1base.rings[j][0], ba1base.rings[j][1], 12.5 + i * 5])
            } else {
                l.push([ba1base.rings[0][0], ba1base.rings[0][1], 12.5 + i * 5])
            }
        }
    }

    let line = {
        type: "polyline", // autocasts as new Polyline()
        paths: l
    };

    ba1line.push(line);
}

export { ba1base, ba1roof, ba1floor, ba1wall, ba1line }