const ba4base = {
    type: "polygon",
    rings: [
        [106.78136344425262, 10.881703351442326, 0],
        [106.78149956636719, 10.881538069133208, 0],
        [106.78150627189007, 10.881549263555446, 0],
        [106.78158942037366, 10.881457074182084, 0],
        [106.7815753387756, 10.881447855243298, 0],
        [106.78170542591903, 10.881297718197974, 0],
        [106.78157399767049, 10.881188407847068, 0],
        [106.78144323997422, 10.881343154416365, 0],
        [106.78143787555592, 10.881355665837608, 0],
        [106.78143452279447, 10.881361592300115, 0],
        [106.78142178230308, 10.881351714863083, 0],
        [106.781372831986, 10.881412296475094, 0],
        [106.78138154916574, 10.881423490902064, 0],
        [106.78137551419516, 10.881433368337266, 0],
        [106.78136478535855, 10.881436002319937, 0],
        [106.78123201601201, 10.881596016725886, 0]
    ]
}

const ba4roof = {
    type: "polygon",
    rings: [
        [106.78136344425262, 10.881703351442326, 35],
        [106.78149956636719, 10.881538069133208, 35],
        [106.78150627189007, 10.881549263555446, 35],
        [106.78158942037366, 10.881457074182084, 35],
        [106.7815753387756, 10.881447855243298, 35],
        [106.78170542591903, 10.881297718197974, 35],
        [106.78157399767049, 10.881188407847068, 35],
        [106.78144323997422, 10.881343154416365, 35],
        [106.78143787555592, 10.881355665837608, 35],
        [106.78143452279447, 10.881361592300115, 35],
        [106.78142178230308, 10.881351714863083, 35],
        [106.781372831986, 10.881412296475094, 35],
        [106.78138154916574, 10.881423490902064, 35],
        [106.78137551419516, 10.881433368337266, 35],
        [106.78136478535855, 10.881436002319937, 35],
        [106.78123201601201, 10.881596016725886, 35]
    ]
}

const ba4floor = []

for(let i = 0; i <= 15; i ++) {
    let r1, r2, r3, r4;

    if(i < 15) {
        r1 = ba4base.rings[i];
        r2 = ba4base.rings[i + 1];
        r3 = [ba4base.rings[i + 1][0], ba4base.rings[i + 1][1] + 0.000000000000010, 10];
        r4 = [ba4base.rings[i][0], ba4base.rings[i][1] + 0.000000000000010, 10];
    } else {
        r1 = ba4base.rings[15];
        r2 = ba4base.rings[0];
        r3 = [ba4base.rings[0][0], ba4base.rings[0][1] + 0.000000000000010, 10];
        r4 = [ba4base.rings[15][0], ba4base.rings[15][1] + 0.000000000000010, 10];
    }

    let f = {
        type: "polygon",
        rings: [r1, r2, r3, r4]
    }

    ba4floor.push(f)
}

const ba4wall = []

for(let i = 0; i <= 15; i ++) {
    let w1, w2, w3, w4;

    if(i < 15) {
        w1 = [ba4base.rings[i][0], ba4base.rings[i][1], 10];
        w2 = [ba4base.rings[i + 1][0], ba4base.rings[i + 1][1], 10];
        w3 = [ba4base.rings[i + 1][0], ba4base.rings[i + 1][1] + 0.000000000000010, 35];
        w4 = [ba4base.rings[i][0], ba4base.rings[i][1] + 0.000000000000010, 35];
    } else {
        w1 = [ba4base.rings[15][0], ba4base.rings[15][1], 10];
        w2 = [ba4base.rings[0][0], ba4base.rings[0][1], 10];
        w3 = [ba4base.rings[0][0], ba4base.rings[0][1] + 0.000000000000010, 35];
        w4 = [ba4base.rings[15][0], ba4base.rings[15][1] + 0.000000000000010, 35];
    }

    let w = {
        type: "polygon",
        rings: [w1, w2, w3, w4]
    }

    ba4wall.push(w)
}

const ba4line = [];

for(let i = 0; i <= 4; i++) {
    let l = [];

    if(i == 0) {
        for(let j = 0; j <= 16; j++) {
            if(j < 16) {
                l.push([ba4base.rings[j][0], ba4base.rings[j][1], 12.5])
            } else {
                l.push([ba4base.rings[0][0], ba4base.rings[0][1], 12.5])
            }
        }
    } else {
        for(let j = 0; j <= 16; j++) {
            if(j < 16) {
                l.push([ba4base.rings[j][0], ba4base.rings[j][1], 12.5 + i * 5])
            } else {
                l.push([ba4base.rings[0][0], ba4base.rings[0][1], 12.5 + i * 5])
            }
        }
    }

    let line = {
        type: "polyline", // autocasts as new Polyline()
        paths: l
    };

    ba4line.push(line);
}

export { ba4base, ba4roof, ba4floor, ba4wall, ba4line }