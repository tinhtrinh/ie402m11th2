const ba5base = {
    type: "polygon",
    rings: [
        [106.78075187722818, 10.882433507233003, 0],
        [106.78088665822237, 10.882274151773162, 0],
        [106.78089604595331, 10.882280736711213, 0],
        [106.78097785332626, 10.882185913587092, 0],
        [106.78096913614753, 10.8821753776828, 0],
        [106.78109318830825, 10.88202787498194, 0],
        [106.7809617600768, 10.881919881886533, 0],
        [106.78082764963284, 10.882078579042597, 0],
        [106.78082697908064, 10.882087139467647, 0],
        [106.78081893245412, 10.882094382904034, 0],
        [106.78080753306654, 10.882086480973417, 0],
        [106.78075590054638, 10.882147062436085, 0],
        [106.78076729993397, 10.88215628135324, 0],
        [106.78076260606848, 10.882163524787948, 0],
        [106.78075388888976, 10.882167475752258, 0],
        [106.7806204489935, 10.882327489766771, 0]
    ]
}

const ba5roof = {
    type: "polygon",
    rings: [
        [106.78075187722818, 10.882433507233003, 35],
        [106.78088665822237, 10.882274151773162, 35],
        [106.78089604595331, 10.882280736711213, 35],
        [106.78097785332626, 10.882185913587092, 35],
        [106.78096913614753, 10.8821753776828, 35],
        [106.78109318830825, 10.88202787498194, 35],
        [106.7809617600768, 10.881919881886533, 35],
        [106.78082764963284, 10.882078579042597, 35],
        [106.78082697908064, 10.882087139467647, 35],
        [106.78081893245412, 10.882094382904034, 35],
        [106.78080753306654, 10.882086480973417, 35],
        [106.78075590054638, 10.882147062436085, 35],
        [106.78076729993397, 10.88215628135324, 35],
        [106.78076260606848, 10.882163524787948, 35],
        [106.78075388888976, 10.882167475752258, 35],
        [106.7806204489935, 10.882327489766771, 35]
    ]
}

const ba5floor = []

for(let i = 0; i <= 15; i ++) {
    let r1, r2, r3, r4;

    if(i < 15) {
        r1 = ba5base.rings[i];
        r2 = ba5base.rings[i + 1];
        r3 = [ba5base.rings[i + 1][0], ba5base.rings[i + 1][1] + 0.000000000000010, 10];
        r4 = [ba5base.rings[i][0], ba5base.rings[i][1] + 0.000000000000010, 10];
    } else {
        r1 = ba5base.rings[15];
        r2 = ba5base.rings[0];
        r3 = [ba5base.rings[0][0], ba5base.rings[0][1] + 0.000000000000010, 10];
        r4 = [ba5base.rings[15][0], ba5base.rings[15][1] + 0.000000000000010, 10];
    }

    let f = {
        type: "polygon",
        rings: [r1, r2, r3, r4]
    }

    ba5floor.push(f)
}

const ba5wall = []

for(let i = 0; i <= 15; i ++) {
    let w1, w2, w3, w4;

    if(i < 15) {
        w1 = [ba5base.rings[i][0], ba5base.rings[i][1], 10];
        w2 = [ba5base.rings[i + 1][0], ba5base.rings[i + 1][1], 10];
        w3 = [ba5base.rings[i + 1][0], ba5base.rings[i + 1][1] + 0.000000000000010, 35];
        w4 = [ba5base.rings[i][0], ba5base.rings[i][1] + 0.000000000000010, 35];
    } else {
        w1 = [ba5base.rings[15][0], ba5base.rings[15][1], 10];
        w2 = [ba5base.rings[0][0], ba5base.rings[0][1], 10];
        w3 = [ba5base.rings[0][0], ba5base.rings[0][1] + 0.000000000000010, 35];
        w4 = [ba5base.rings[15][0], ba5base.rings[15][1] + 0.000000000000010, 35];
    }

    let w = {
        type: "polygon",
        rings: [w1, w2, w3, w4]
    }

    ba5wall.push(w)
}

const ba5line = [];

for(let i = 0; i <= 4; i++) {
    let l = [];

    if(i == 0) {
        for(let j = 0; j <= 16; j++) {
            if(j < 16) {
                l.push([ba5base.rings[j][0], ba5base.rings[j][1], 12.5])
            } else {
                l.push([ba5base.rings[0][0], ba5base.rings[0][1], 12.5])
            }
        }
    } else {
        for(let j = 0; j <= 16; j++) {
            if(j < 16) {
                l.push([ba5base.rings[j][0], ba5base.rings[j][1], 12.5 + i * 5])
            } else {
                l.push([ba5base.rings[0][0], ba5base.rings[0][1], 12.5 + i * 5])
            }
        }
    }

    let line = {
        type: "polyline", // autocasts as new Polyline()
        paths: l
    };

    ba5line.push(line);
}

export { ba5base, ba5roof, ba5floor, ba5wall, ba5line }